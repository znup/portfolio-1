---
import { Icon } from 'astro-icon/components';
---
<button 
  id="theme-toggle" 
  type="button" 
  class="ml-1 origin-[right_center] scale-100 transition-all duration-500">

  <div id="icon-theme-light">
    <Icon name="mdi:white-balance-sunny" class="size-6" />
    <span class="sr-only">Use Light Mode</span>
  </div>

  <div id="icon-theme-dark" class="hidden">
    <Icon name="mdi:weather-night" class="size-6"/>
    <span class="sr-only">Use Dark Mode</span>
  </div>

</button>

<script>
  import invariant from 'tiny-invariant';

  const themes = ['light', 'dark'];
  const button = document.querySelector('#theme-toggle');
  invariant(button, 'button should not be null');

  const getThemeCurrent = () => document.documentElement.dataset.theme;
  const getThemeNext = () => {
    const themeCurrent = getThemeCurrent();
    invariant(themeCurrent, "themeCurrent should not be undefined");
    const index = themes.indexOf(themeCurrent);
    return themes[(index + 1) % themes.length];
  }

  const updateIcon = () => {
    const themeCurrent = getThemeCurrent();
    document
    .querySelector(`#icon-theme-${themeCurrent}`)
    ?.classList.add('hidden');
    const themeNext = getThemeNext();
    document
    .querySelector(`#icon-theme-${themeNext}`)
    ?.classList.remove('hidden');
  }

  button.addEventListener('click', () => {
    const themeNext = getThemeNext();
    document.documentElement.dataset.theme = themeNext;
    localStorage.setItem('theme', themeNext);
    updateIcon();
  });
  updateIcon();
</script>

<style>
  /* :global(.fixed-header) #theme-toggle { */
    :global(.fixed-header) {
    @apply ml-0 scale-100;
    @apply ml-0;
  }
</style>